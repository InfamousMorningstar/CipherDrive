version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: cipherdrive_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cipherdrive_db}
      POSTGRES_USER: ${POSTGRES_USER:-cipherdrive_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
    volumes:
      # Database on SSD for performance
      - /mnt/app-pool/cipherdrive/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cipherdrive_user} -d ${POSTGRES_DB:-cipherdrive_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - cipherdrive-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # FastAPI Backend
  backend:
    image: python:3.11-slim
    container_name: cipherdrive_backend
    restart: unless-stopped
    working_dir: /app
    command: >
      bash -c "
        apt-get update && apt-get install -y curl libpq-dev gcc g++ libmagic1 git &&
        git clone https://github.com/InfamousMorningstar/CipherDrive.git /tmp/repo &&
        cp -r /tmp/repo/backend/* /app/ &&
        pip install --no-cache-dir -r requirements.txt &&
        cd /app &&
        export PYTHONPATH=/app:$PYTHONPATH &&
        python -c 'from database import create_tables; create_tables()' || echo 'DB init failed, continuing...' &&
        python -m uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1
      "
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://${POSTGRES_USER:-cipherdrive_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-cipherdrive_db}
      
      # JWT Configuration
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_REFRESH_SECRET_KEY: ${JWT_REFRESH_SECRET_KEY}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS:-7}
      
      # CORS and Security
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8069}
      CORS_ALLOW_CREDENTIALS: true
      
      # File Upload Configuration  
      UPLOAD_DIR: /data/uploads
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-104857600}
      ALLOWED_FILE_TYPES: ${ALLOWED_FILE_TYPES:-"image/*,video/*,audio/*,application/pdf,text/*"}
      
      # Email Configuration (Optional)
      SMTP_SERVER: ${SMTP_SERVER:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      SMTP_USE_TLS: ${SMTP_USE_TLS:-true}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@cipherdrive.local}
      FROM_NAME: ${FROM_NAME:-CipherDrive}
      
      # Application Configuration
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:8069}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@cipherdrive.local}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      
      # Production settings
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
      ENVIRONMENT: production
      SKIP_DIRECTORY_CHECK: true
    volumes:
      # Mount TrueNAS paths directly so the app can see them
      - /mnt/app-pool/cipherdrive/config:/mnt/app-pool/cipherdrive/config
      - /mnt/app-pool/cipherdrive/logs:/mnt/app-pool/cipherdrive/logs
      - /mnt/Centauri/cipherdrive/users:/mnt/Centauri/cipherdrive/users
      - /mnt/Centauri/cipherdrive/shares:/mnt/Centauri/cipherdrive/shares
      - /mnt/Centauri/cipherdrive/uploads:/mnt/Centauri/cipherdrive/uploads
      - /mnt/Centauri/cipherdrive/ssl:/mnt/Centauri/cipherdrive/ssl
      
      # Also mount to expected application paths
      - /mnt/Centauri/cipherdrive/uploads:/data/uploads
      - /mnt/Centauri/cipherdrive/shares:/data/shares
      - /mnt/app-pool/cipherdrive/logs:/app/logs
      
      # Optional media mounts (read-only)
      - /mnt/Centauri/movies:/data/movies:ro
      - /mnt/Centauri/tv:/data/tv:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cipherdrive-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "${BACKEND_PORT:-8000}:8000"

  # React Frontend
  frontend:
    image: node:18-alpine
    container_name: cipherdrive_frontend
    restart: unless-stopped
    working_dir: /app
    command: >
      sh -c "
        apk add --no-cache git nginx curl &&
        git clone https://github.com/InfamousMorningstar/CipherDrive.git /tmp/repo &&
        cp -r /tmp/repo/frontend/* /app/ &&
        npm ci &&
        npm run build &&
        cp /tmp/repo/frontend/nginx.conf /etc/nginx/http.d/default.conf &&
        nginx -g 'daemon off;'
      "
    environment:
      NODE_ENV: production
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api}
    depends_on:
      - backend
    networks:
      - cipherdrive-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8069"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "${FRONTEND_PORT:-8069}:8069"

networks:
  cipherdrive-network:
    driver: bridge
    name: cipherdrive-network